[{"D:\\Downloads\\SriKumaranClinic\\Client\\src\\index.js":"1","D:\\Downloads\\SriKumaranClinic\\Client\\src\\App.js":"2","D:\\Downloads\\SriKumaranClinic\\Client\\src\\reportWebVitals.js":"3","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Patient.js":"4","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Login.js":"5","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Home.js":"6","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\SignUp.js":"7","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Admins.js":"8","D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Doctors.js":"9","D:\\Downloads\\SriKumaranClinic\\Client\\src\\constants\\constants.js":"10"},{"size":535,"mtime":1744297882234,"results":"11","hashOfConfig":"12"},{"size":998,"mtime":1744301404763,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1744297882349,"results":"14","hashOfConfig":"12"},{"size":22269,"mtime":1746943133472,"results":"15","hashOfConfig":"12"},{"size":6934,"mtime":1746445350745,"results":"16","hashOfConfig":"12"},{"size":7256,"mtime":1744424082712,"results":"17","hashOfConfig":"12"},{"size":10232,"mtime":1746445437983,"results":"18","hashOfConfig":"12"},{"size":31989,"mtime":1746445205772,"results":"19","hashOfConfig":"12"},{"size":34292,"mtime":1746943110118,"results":"20","hashOfConfig":"12"},{"size":166,"mtime":1746336142967,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vr2sfz",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Downloads\\SriKumaranClinic\\Client\\src\\index.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\App.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\reportWebVitals.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Patient.js",["52","53","54"],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Login.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Home.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\SignUp.js",[],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Admins.js",["55","56"],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\components\\Doctors.js",["57","58","59","60","61"],[],"D:\\Downloads\\SriKumaranClinic\\Client\\src\\constants\\constants.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":262,"column":6,"nodeType":"64","endLine":262,"endColumn":8,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":428,"column":17,"nodeType":"68","messageId":"69","endLine":428,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":515,"column":17,"nodeType":"68","messageId":"69","endLine":515,"endColumn":23},{"ruleId":"62","severity":1,"message":"71","line":111,"column":6,"nodeType":"64","endLine":111,"endColumn":8,"suggestions":"72"},{"ruleId":"62","severity":1,"message":"71","line":287,"column":6,"nodeType":"64","endLine":287,"endColumn":8,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"74","line":130,"column":9,"nodeType":"75","endLine":152,"endColumn":4},{"ruleId":"62","severity":1,"message":"76","line":154,"column":9,"nodeType":"75","endLine":176,"endColumn":4},{"ruleId":"62","severity":1,"message":"77","line":178,"column":9,"nodeType":"75","endLine":203,"endColumn":4,"suggestions":"78"},{"ruleId":"62","severity":1,"message":"79","line":205,"column":9,"nodeType":"75","endLine":233,"endColumn":4,"suggestions":"80"},{"ruleId":"62","severity":1,"message":"81","line":235,"column":9,"nodeType":"75","endLine":263,"endColumn":4,"suggestions":"82"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchAppointments', 'fetchCareTeam', 'fetchCompletedAppointments', 'fetchDoctors', 'fetchPatientProfile', and 'fetchPrescriptions'. Either include them or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'errorData' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCompletedAppointments' and 'fetchUpcomingAppointments'. Either include them or remove the dependency array.",["84"],["85"],"The 'fetchDoctorProfile' function makes the dependencies of useEffect Hook (at line 272) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fetchDoctorProfile' in its own useCallback() Hook.","VariableDeclarator","The 'fetchPatientsWithAppointments' function makes the dependencies of useEffect Hook (at line 272) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fetchPatientsWithAppointments' in its own useCallback() Hook.","The 'fetchAppointments' function makes the dependencies of useEffect Hook (at line 272) change on every render. To fix this, wrap the definition of 'fetchAppointments' in its own useCallback() Hook.",["86"],"The 'fetchCompletedAppointments' function makes the dependencies of useEffect Hook (at line 272) change on every render. To fix this, wrap the definition of 'fetchCompletedAppointments' in its own useCallback() Hook.",["87"],"The 'fetchUpcomingAppointments' function makes the dependencies of useEffect Hook (at line 272) change on every render. To fix this, wrap the definition of 'fetchUpcomingAppointments' in its own useCallback() Hook.",["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [fetchAppointments, fetchCareTeam, fetchCompletedAppointments, fetchDoctors, fetchPatientProfile, fetchPrescriptions]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchCompletedAppointments, fetchUpcomingAppointments]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Wrap the definition of 'fetchAppointments' in its own useCallback() Hook.",{"range":"105","text":"106"},"Wrap the definition of 'fetchCompletedAppointments' in its own useCallback() Hook.",{"range":"107","text":"108"},"Wrap the definition of 'fetchUpcomingAppointments' in its own useCallback() Hook.",{"range":"109","text":"110"},[7843,7845],"[fetchAppointments, fetchCareTeam, fetchCompletedAppointments, fetchDoctors, fetchPatientProfile, fetchPrescriptions]",[3827,3829],"[fetchCompletedAppointments, fetchUpcomingAppointments]",[8597,8599],[5747,6737],"useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      const response = await fetch(BASE_URL + '/doctor/appointments', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const now = new Date();\n        const sortedAppointments = data\n          .filter(appointment => new Date(appointment.date) > now || (new Date(appointment.date).toLocaleDateString() === now.toLocaleDateString() && appointment.time > now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })))\n          .sort((a, b) => new Date(a.date + ' ' + a.time) - new Date(b.date + ' ' + b.time));\n        setAppointments(sortedAppointments);\n      } else {\n        console.error('Failed to fetch appointments');\n      }\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  })",[6777,7551],"useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n  \n      const response = await fetch(BASE_URL + '/doctor/appointment/completed', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n  \n        const sortedCompleted = data.sort((a, b) => \n          new Date(b.date + ' ' + b.time) - new Date(a.date + ' ' + a.time)\n        );\n  \n        setCompletedAppointments(sortedCompleted); \n      } else {\n        console.error('Failed to fetch completed appointments');\n      }\n    } catch (error) {\n      console.error('Error fetching completed appointments:', error);\n    }\n  })",[7592,8360],"useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n  \n      const response = await fetch(BASE_URL + '/doctor/appointments/upcoming', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n  \n        const sortedUpcoming = data.sort((a, b) =>\n          new Date(a.date + ' ' + a.time) - new Date(b.date + ' ' + b.time)\n        );\n  \n        setUpcomingAppointments(sortedUpcoming); \n      } else {\n        console.error('Failed to fetch upcoming appointments');\n      }\n    } catch (error) {\n      console.error('Error fetching upcoming appointments:', error);\n    }\n  })"]